openapi: 3.0.0
info:
  title: annotation-competition-api
  version: '1.0'
servers:
  - url: 'http://annotation-competition.herokuapp.com/api/v1'
paths:
  /user:
    post:
      summary: Create New User
      operationId: post-user
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples: {}
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                userName:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 8
                  maxLength: 20
                  format: password
              required:
                - userId
                - userName
                - email
                - password
            examples: {}
          application/javascript:
            schema:
              type: object
              properties: {}
          application/xml:
            schema:
              type: object
              properties: {}
        description: Post the necessary fields for the API to create a new user.
      description: ユーザーを登録
  /user/login:
    post:
      summary: ''
      operationId: post-user-login
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
        '401':
          description: Unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                password:
                  type: string
                  format: password
      description: ログイン操作を実施し，アクセストークンを取得
  /leader_board:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        '':
                          type: string
      operationId: get-leader_board
      parameters:
        - schema:
            type: string
          in: header
          name: 'Authorization: Token'
      description: アノテーションコンペティションのリーダーボードの情報を取得
  /competition/next:
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-competition-next
      description: 開催中，もしくは次のコンペティションの情報を取得
  /competition/assignment:
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-competition-assignment
      description: アノテーションする画像などの情報を取得
    post:
      summary: ''
      operationId: post-competition-assignment
      responses:
        '200':
          description: OK
      description: アノテーション結果を送信
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      x-examples: {}
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        userName:
          type: string
        email:
          type: string
          format: email
        userId:
          type: string
      required:
        - id
        - userName
        - email
        - userId
